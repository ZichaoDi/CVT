function g = gradient_energy_1d(data)
global maxx minx
n = size(data,1);
g=zeros(n,1);
if(n==1)
    startpt = minx;
    endpt = maxx;
    g=quad(@expr,startpt,endpt,1e-12,[],data(1));
else
for j=1:n
    
        if (j==1)
         startpt = minx;    
         endpt = 0.5*(data(j)+data(j+1));
         %g(j)=quad(@expr,startpt,endpt,1e-12,[],data(j))+1/2*(data(j)-endpt)^2*(r(data(j)-r(data(j+1))))+1/2*(data(j)-startpt)^2*(-r(data(j)));
        elseif (j==n)
         startpt = 0.5*(data(j-1)+data(j));
         endpt = maxx;
         %g(j)=quad(@expr,startpt,endpt,1e-12,[],data(j))+1/2*(data(j)-endpt)^2*(r(data(j)))+1/2*(data(j)-startpt)^2*(r(data(j-1))-r(data(j)));
        else
         startpt = 0.5*(data(j-1)+data(j));
         endpt = 0.5*(data(j)+data(j+1));
         %g(j)=quad(@expr,startpt,endpt,1e-12,[],data(j))+1/2*(data(j)-endpt)^2*(r(data(j)-r(data(j+1))))+1/2*(data(j)-startpt)^2*(r(data(j-1))-r(data(j)));
        end        
        
g(j)=quad(@expr,startpt,endpt,1e-12,[],data(j));
%g(j)=(data(j)-endpt)^2-(data(j)-startpt)^2;
end
end

function z = expr(s,data)
z =  r(s).*2.*(data-s);